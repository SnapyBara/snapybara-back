name: Deploy to Render

on:
  workflow_run:
    workflows: ["Backend Tests CI"]
    types: [completed]

concurrency:
  group: deploy-${{ github.event.workflow_run.head_branch }}
  cancel-in-progress: true

jobs:
  deploy-staging:
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'develop'
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: ${{ secrets.SERVICE_BASE_URL_STAGING }}

    steps:
      - uses: actions/checkout@v4

      - name: Trigger Render deploy (staging)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID_STAGING }}
        run: |
          curl -sS -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys \
            -d '{"clearCache": false}'

      - name: Smoke test (staging)
        env:
          BASE_URL: ${{ secrets.SERVICE_BASE_URL_STAGING }}
        run: |
          for i in {1..20}; do
            echo "Ping $BASE_URL/health (try $i)..."
            if curl -fsS "$BASE_URL/health" >/dev/null; then
              echo "OK"; exit 0
            fi
            sleep 10
          done
          echo "Service not healthy after deploy"; exit 1

  deploy-production:
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-latest
    environment:
      name: production          # ajoute des approbations dans les settings
      url: ${{ secrets.SERVICE_BASE_URL_PROD }}

    steps:
      - uses: actions/checkout@v4

      - name: Trigger Render deploy (prod)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID_PROD }}
        run: |
          curl -sS -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys \
            -d '{"clearCache": false}'

      - name: Smoke test (prod)
        env:
          BASE_URL: ${{ secrets.SERVICE_BASE_URL_PROD }}
        run: |
          for i in {1..30}; do
            echo "Ping $BASE_URL/health (try $i)..."
            if curl -fsS "$BASE_URL/health" >/dev/null; then
              echo "OK"; exit 0
            fi
            sleep 10
          done
          echo "Service not healthy after deploy"; exit 1
